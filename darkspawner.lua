--[[
    Dark Spawner Script - Cleaned and Debuggable Version
    This script was adapted from an autogenerated TypeScript conversion.
    For Roblox use. Handles pet, seed, and egg spawning via GUI.
    Discord: discord.gg/25ms (original script source)
]]

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- Modules and Data
local PetRegistry = require(ReplicatedStorage.Data.PetRegistry)
local PetList = require(ReplicatedStorage.Data.PetRegistry.PetList)
local SeedPackController = require(ReplicatedStorage.Modules.SeedPackController)
local SeedPackData = require(ReplicatedStorage.Data.SeedPackData)
local SeedData = require(ReplicatedStorage.Data.SeedData)
local Notification = require(ReplicatedStorage.Modules.Notification)

-- Models
local PetModels = game:GetObjects("rbxassetid://118358827691673")[1]
local SeedModels = game:GetObjects("rbxassetid://125869296102137")[1]

-- Utility Functions
local function getPetNames()
    local names = {}
    for _, child in ipairs(PetModels:GetChildren()) do
        table.insert(names, child.Name)
    end
    return names
end

local function getSeedNames()
    local names = {}
    for _, child in ipairs(SeedModels:GetChildren()) do
        table.insert(names, child.Name)
    end
    return names
end

-- Mouse handler (sample, can be extended)
local mouse = Players.LocalPlayer:GetMouse()
mouse.Button1Down:Connect(function()
    local tool = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
    if tool and tool:GetAttribute("SeedNamee") then
        local seedName = tool:GetAttribute("SeedNamee")
        -- Optional: Handle seedName logic here
    end
    local target = mouse.Target
    if target then
        local targetName = target.Name
        -- Optional: Handle targetName logic here
    end
end)

-- Spawner Logic
local function spawnPet(petName)
    local petData = PetList[petName]
    if not petData then return end
    local petModel = PetModels:FindFirstChild(petName)
    if petModel then
        local clone = petModel:Clone()
        clone.Parent = Workspace
    end
end

local function spawnEgg(eggName)
    local eggModel = ReplicatedStorage.Assets.Models.EggModels:FindFirstChild(eggName)
    if not eggModel then return end
    local newTool = Instance.new("Tool")
    newTool.Name = eggModel.Name .. " x1"
    newTool:SetAttribute("EggNamee", eggModel.Name)
    newTool:SetAttribute("Quantity", 1)
    newTool:SetAttribute("ItemType", "PetEgg")

    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Transparency = 1
    handle.Size = Vector3.new(2, 2, 2)
    handle.Parent = newTool

    local hold = Instance.new("Animation")
    hold.Name = "Hold"
    hold.AnimationId = "rbxassetid://113938302810353"
    hold.Parent = newTool

    local modelClone = eggModel:Clone()
    modelClone.Parent = handle

    local weld = Instance.new("Weld")
    weld.Name = "Handle_HitBox_WELD"
    weld.C0 = CFrame.new()
    weld.C1 = CFrame.new()
    weld.Part0 = handle
    weld.Part1 = modelClone:FindFirstChild("HitBox")
    weld.Parent = modelClone:FindFirstChild("HitBox")

    for _, part in ipairs(modelClone:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
            part.Massless = true
        end
    end

    newTool.Equipped:Connect(function()
        local anim = Instance.new("Animation")
        anim.AnimationId = hold.AnimationId
        local track = Players.LocalPlayer.Character.Humanoid.Animator:LoadAnimation(anim)
        track:Play()
    end)

    newTool.Parent = Players.LocalPlayer.Backpack
end

local function spawnSeed(seedName)
    local seedData = SeedData[seedName]
    if not seedData then return end
    local model = SeedModels:FindFirstChild(seedName)
    if not model then return end

    local newTool = Instance.new("Tool")
    newTool.Name = seedData.SeedName .. " [X1]"
    newTool:SetAttribute("SeedNamee", seedData.SeedName)
    newTool:SetAttribute("Quantity", 1)
    newTool:SetAttribute("ItemType", "Holdable")

    local handle = model:Clone()
    handle.Name = "Handle"
    handle.Parent = newTool

    newTool.Parent = Players.LocalPlayer.Backpack
end

local function spinSeedPacks()
    for _, pack in pairs(SeedPackData.Packs) do
        for _, item in pairs(pack.Items) do
            -- You can handle item.Type here if needed
        end
    end
end

-- UI Initialization
local function initUI()
    local rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
    local window = rayfield:CreateWindow({
        LoadingTitle = "Dark Spawner",
        LoadingSubtitle = "Made by whqtt",
        Name = "Dark Spawner",
        Theme = "Default",
    })
    if not window then error("Failed to create Rayfield window") end

    -- Pet Spawner Tab
    local petTab = window:CreateTab("Pet Spawner", 136232391555861)
    petTab:CreateDropdown({
        Name = "Pet",
        Options = getPetNames(),
        Callback = function(selected)
            spawnPet(selected)
        end,
    })
    petTab:CreateInput({
        Name = "Pet Weight",
        PlaceholderText = "1",
    })
    petTab:CreateInput({
        Name = "Pet Age",
        PlaceholderText = "1",
    })
    petTab:CreateButton({
        Name = "Spawn",
        Callback = function()
            -- For direct spawning, you may implement selection logic
        end,
    })

    -- Seed Spawner Tab
    local seedTab = window:CreateTab("Seed Spawner", 111869302762063)
    seedTab:CreateDropdown({
        Name = "Seed",
        Options = getSeedNames(),
        Callback = function(selected)
            spawnSeed(selected)
        end,
    })
    seedTab:CreateButton({
        Name = "Spawn",
        Callback = function()
            -- For direct spawning, you may implement selection logic
        end,
    })
    seedTab:CreateButton({
        Name = "Spin",
        Callback = function()
            spinSeedPacks()
        end,
    })

    -- Egg Spawner Tab
    local eggTab = window:CreateTab("Egg Spawner", 133763620419151)
    eggTab:CreateInput({
        Name = "Egg Name",
        PlaceholderText = "Night Egg",
        Callback = function(text)
            spawnEgg(text)
        end,
    })
    eggTab:CreateButton({
        Name = "Spawn",
        Callback = function()
            -- For direct spawning, you may implement selection logic
        end,
    })
end

-- Return API table if used as a module
return {
    GetPets = getPetNames,
    GetSeeds = getSeedNames,
    SpawnPet = spawnPet,
    SpawnEgg = spawnEgg,
    SpawnSeed = spawnSeed,
    Spin = spinSeedPacks,
    InitUI = initUI,
}
